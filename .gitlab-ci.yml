# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.31.1"
    file:
      - "defaults/stages.yaml"
      - "defaults/nubus-workflow.yaml"
      - "jobs/semantic-release-env.yaml"

build_frigate:
  stage: package
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /skip-build/ || $pipeline =~ /skip-build/"
      when: never
    - if: "$CI_COMMIT_MESSAGE =~ /force-build/ || $pipeline =~ /force-build/"
  dependencies:
    - pre-semantic-release
  needs:
    - pre-semantic-release
  artifacts:
    paths:
      - frigate/dist/
    expire_in: 1 week
  image: docker-registry.knut.univention.de/python:3.12-slim
  before_script:
    - |
      # Split the version string by hyphen (-) into two parts
      IFS='-' read -ra parts <<< "$RELEASE_VERSION"

      # Extract the version number and the suffix
      version_number="${parts[0]}"
      suffix="${parts[*]:1}"

      # Check if the suffix exists
      if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
          modified_suffix="dev0+${suffix// /-}"
          export BUILD_VERSION="$version_number.$modified_suffix.${CI_COMMIT_SHORT_SHA}"
      else
          export BUILD_VERSION="$version_number"
      fi
  script:
    - cd frigate
    - pip install build
    - python -m build


publish_frigate:
  stage: publish
  extends: build_frigate
  dependencies:
    - build_frigate
    - pre-semantic-release
  needs:
    - build_frigate
    - pre-semantic-release
  script:
    - cd frigate
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
